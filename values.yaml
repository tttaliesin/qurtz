# Default values for qurtz.
# YAML 형식 파일입니다.
# 템플릿에 전달될 변수들을 선언합니다.

# 레플리카셋 개수를 설정합니다. 자세한 정보: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# Obsidian vault를 위한 NFS 설정
nfs:
  server: ""  # Xpenology NAS IP 주소
  path: ""    # NAS의 Obsidian vault 경로
  readOnly: false

# File watcher 설정
fileWatcher:
  image:
    repository: alpine/inotify-tools
    tag: latest
    pullPolicy: IfNotPresent
  # 감시할 이벤트 종류 (modify,create,delete,move)
  events: "modify,create,delete,move"
  # 폴링 간격 (초)
  pollInterval: 5

# Quartz 정적 사이트 생성기 설정
quartz:
  image:
    repository: node
    tag: "18-alpine"
    pullPolicy: IfNotPresent
  # Quartz 설정이 포함된 Git 저장소
  gitRepo: ""
  # 사용할 Git 브랜치
  gitBranch: "main"

# 컨테이너 이미지를 설정합니다. 자세한 정보: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # 이미지 pull 정책을 설정합니다.
  pullPolicy: IfNotPresent
  # 이미지 태그를 오버라이드합니다. 기본값은 차트의 appVersion입니다.
  tag: ""

# Private 저장소에서 이미지를 가져오기 위한 시크릿입니다. 자세한 정보: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# 차트 이름을 오버라이드합니다.
nameOverride: ""
fullnameOverride: ""


# Pod에 Kubernetes Annotations을 설정합니다.
# 자세한 정보: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# Pod에 Kubernetes Labels을 설정합니다.
# 자세한 정보: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# 서비스를 설정합니다. 자세한 정보: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # 서비스 타입을 설정합니다. 자세한 정보: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # 포트를 설정합니다. 자세한 정보: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80


resources: {}
  # 일반적으로 기본 리소스를 지정하지 않고 사용자의 의식적인 선택으로 남겨두는 것을 권장합니다.
  # 이는 또한 Minikube와 같이 리소스가 적은 환경에서 차트가 실행될 가능성을 높입니다.
  # 리소스를 지정하려면 다음 줄의 주석을 해제하고 필요에 따라 조정한 후
  # 'resources:' 뒤의 중괄호를 제거하세요.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Liveness와 Readiness 프로브를 설정합니다. 자세한 정보: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http



nodeSelector: {}

tolerations: []

affinity: {}

